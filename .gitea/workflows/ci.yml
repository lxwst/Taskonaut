name: Build

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: [docker]
    container:
      image: node:20
      user: root            # ← wichtig: Schritte laufen als root, kein sudo nötig
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Diagnose Umgebung
        run: |
          echo "=== PATH ==="; echo "$PATH"; echo
          echo "=== Versions ==="
          node --version || true
          npm --version || true
          python3 --version || echo "python3 nicht gefunden"
          echo "=== OS Release ==="
          cat /etc/os-release || true

      - name: System Pakete (als root, noninteractive)
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          apt-get update
          apt-get install -y --no-install-recommends \
            libpython3.11 \
            python3.11-dev \
            python3.11-venv \
            build-essential \
            zip
          rm -rf /var/lib/apt/lists/*

      - name: Python venv + Dependencies
        run: |
          python3.11 -m venv .venv
          . .venv/bin/activate
          pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pyinstaller

      - name: Build
        run: |
          . .venv/bin/activate
          if [ -f build.py ]; then python build.py; else pyinstaller -F main.py; fi

      - name: Paket erstellen
        run: |
          if [ -d dist ]; then zip -r dist.zip dist; fi
          ls -la dist || true
          ls -la dist.zip || true

      - name: Artefakt hochladen
        uses: actions/upload-artifact@v3
        with:
          name: build-dist
          path: |
            dist/
            dist.zip
          if-no-files-found: warn
